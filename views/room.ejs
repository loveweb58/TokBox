<!DOCTYPE html>
<html>

<head>
  <meta charset="utf-8">
  <meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1">
  <% if(iosAppId) { %>
  <meta name="apple-itunes-app" content="app-id=<%=iosAppId%>, app-argument=<%=iosURL%>">
  <% } %>
  <title>Edety.com</title>
  <meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no">

  <!--[if IE]><link rel="shortcut icon" href="/favicon.ico"><![endif]-->
  <link rel="icon" href="/favicon.png">

  <link rel="stylesheet" href="/css/endMeeting.opentok.css">

  <link rel="stylesheet" href="/css/room.opentok.css">
  <link rel="stylesheet" href="/css/buttons.css" />

  <% if (useGoogleFonts) { %>
  <link href="https://fonts.googleapis.com/css?family=Open+Sans" rel="stylesheet">
  <% } else { %>
  <link href="/css/fonts.css" rel="stylesheet">
  <% } %>
  <link rel="chrome-webstore-item" href="https://chrome.google.com/webstore/detail/<%=chromeExtensionId%>">
  <link rel="stylesheet" href="https://assets.tokbox.com/solutions/css/style.css">
  <link rel="stylesheet" href="/css/annotation.opentok.css">
  <link rel="stylesheet" href="/css/checkboxes.css" />
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/intl-tel-input/12.1.0/css/intlTelInput.css">
  <script src="https://cdn.jsdelivr.net/npm/easytimer@1.1.1/src/easytimer.min.js"></script>
  <script>
    window.apiKey = '<%=apiKey%>';
    window.precallApiKey = '<%=precallApiKey%>';
    window.precallSessionId = '<%=precallSessionId%>';
    window.precallToken = '<%=precallToken%>';
    window.showTos =<%=showTos %> && !sessionStorage.tosAccepted;
    window.opentokJsUrl = '<%=opentokJsUrl%>';
    window.feedbackUrl = '<%=feedbackUrl%>';
    var freeMinutesEnded=false;
    var isMobile = function () { return typeof window.orientation !== 'undefined'; }

    var mobileSettings = function () {

      var ids = ['toggleSharing', 'manageRecordings', 'videoSwitch',
        'audioSwitch', 'showFeedback', 'screenShareErrors'];

      ids.forEach(function (id) {
        var elem = document.getElementById(id);
        elem && elem.classList.add('hidden');
      });
    };

    window.addEventListener('DOMContentLoaded', function loaded() {
      window.removeEventListener('DOMContentLoaded', loaded);
      if (isMobile()) {
        mobileSettings();
      }
    });
  </script>
  <script type="text/javascript">
    // var baseUrl = window.location.protocol+"//"+window.location.hostname;
    var baseUrl = window.location.protocol+"//"+window.location.hostname+':8000';
  </script>
  <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.4.1/jquery.min.js" integrity="sha256-CSXorXvZcTkaix6Yvo6HppcZGetbYMGWSFlBw8HfCJo="
    crossorigin="anonymous"></script>
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@8"></script>

  <script>
    var getUrlParameter = function getUrlParameter(sParam) {
      var sPageURL = window.location.search.substring(1),
        sURLVariables = sPageURL.split('&'),
        sParameterName,
        i;

      for (i = 0; i < sURLVariables.length; i++) {
        sParameterName = sURLVariables[i].split('=');

        if (sParameterName[0] === sParam) {
          return sParameterName[1] === undefined ? true : decodeURIComponent(sParameterName[1]);
        }
      }
    };
    var getLastSegment = function getLastSegment() {
      var parts = window.location.href.split('/');
      var lastSegment = parts.pop() || parts.pop();  // handle potential trailing slash
      var lastSegment = lastSegment.split("?");
      console.log(lastSegment);
      return lastSegment[0];
    }

  </script>
  <script type="text/javascript">
    var timerStatus=0;
    var timer = new Timer();
    timer.addEventListener('secondsUpdated', function (e) {
      // console.log("timer");
        var totalSeconds=timer.getTotalTimeValues().seconds;
        $('body .room-name').html(timer.getTimeValues().toString());
        $('body .timerDetails').val(timer.getTotalTimeValues().seconds);
        if(!meetingType=="true" && meetingType==undefined){
          $('body .roomPrice').html(calculatePrice(totalSeconds));
        }

        if(owner=="true" && package==""){
          var result = ( totalSeconds % 60 ) / 100;
          console.log("60 Seconds "+result);
          if(result==0){
            console.log("Minus=="+result);
            //minus free minute
            let currentMinutes= $("body .freeMinutesCount").text();
            let updatedMinutes= parseInt(currentMinutes)-1;
            $("body .freeMinutesCount").html(updatedMinutes);
            //update in db
            $.ajax({
              url: baseUrl+"/meetingMinutesUpdate",
              type: "POST",
              // dataType:"JSON",
              data:{userId,updatedMinutes},
              success: function(response){
                //hide  spent time
                if(updatedMinutes<=0){
                  freeMinutesEnded=true;
                  // otHelper.disconnect();
                }
              }
            });
          }
        }
        // console.log(calculatePrice(totalSeconds));
    });
  </script>
  <script defer src="/js/vendor/es6-promise.min.js"></script>
  <script defer type="text/javascript" src="/js/ie_polyfills.js"></script>
  <script defer src="/js/vendor/clipboard.min.js"></script>
  <script defer src="/js/components/bubble.js"></script>
  <script defer src="/js/components/modal.js"></script>
  <script defer src="/js/vendor/lazy_loader.js"></script>
  <script defer src="/js/rtcApp.js"></script>
<style type="text/css">
  .tc-modal.show{
    z-index: 999;
  }
</style>
</head>

<body class="forbidden">
<input type="hidden" name="timer" class="timerDetails" value="0">
  <div id="top-banner">
    <div class="icon-container">
      <i data-icon="tokbox_logo"></i>
    </div>
    <div class="center-container">
      <div class="room-info">
        <p class="room-name"></p>
        <i data-icon="participants"></i><span id="participantsStr"></span>
        <p class="displaySpent" style="display: none;">Estimated Spent: $ <span class="roomPrice">0</span></p>
        <p class="freeMinutes" style="display: none;" style="">Free Minutes: <span class="freeMinutesCount">0</span></p>

      </div>
    </div>
    <div class="right-container">
      <div class="videoSwitch">
        <a id="videoSwitch" disabled><i data-icon="videoSwitch"></i><span>Stop receiving video</span></a>
      </div>
      <div class="audioSwitch" disabled>
        <a id="audioSwitch"><i data-icon="audioSwitch"></i><span>Mute all participants</span></a>
      </div>
      <div class="sourcePick">
        <a id="toggleFacingMode"><i data-icon="cycleVideo"></i></a>
      </div>
      <div class="sourcePick">
        <a id="pickMic"><i data-icon="pmic"></i></a>
      </div>
      <!-- <%   if(enableArchiving) { %>
      <div id="toggleArchiving" disabled>
        <a id="startArchiving" class="btn btn-blue btn-padding">Record</a>
        <a id="stopArchiving" class="btn btn-blue btn-padding duration">Stop Recording</a>
      </div>
      <%  if(enableArchiveManager) { %>
      <div id="manageRecordings">
        <a id="viewRecordings" class="btn btn-blue btn-padding"><span id="recordings">0</span></a>
      </div>
      <% } } %> -->
      <div class="layout-container">
        <div>
          <div id="layout-icon">
            <a id="chooseLayout">
              <i data-icon="layout-icon"></i>
            </a>
          </div>
          <div id="layout-label">Layout</div>
        </div>
      </div>
    </div>
  </div>
  <section id="screen">
    <div class="streams">
      <div class="tc-list">
        <ul></ul>
      </div>
    </div>
    <div class="call-controls" id="call-controls">
      <div>
        <button id="endCall" disabled>
          <i data-icon="end_call"></i>
        </button>
        <p>End Session</p>
      </div>
      <div>
        <button id="toggle-publisher-video" class="selected" disabled>
          <i data-icon="no_video" data-event-name="roomView:buttonClick" data-action="video" data-stream-id="publisher"
            data-stream-type="publisher"></i>
        </button>
        <p>Your Video</p>
      </div>
      <div>
        <button id="toggle-publisher-audio" disabled>
          <i data-icon="mic-muted"></i>
        </button>
        <p>Your Mic</p>
      </div>
      <div id="addToCall-container">
        <button id="addToCall">
          <i data-icon="add"></i>
        </button>
        <p>Invite</p>
      </div>
      <% if (enableScreensharing) { %>
      <div id="screen-share-container">
        <button id="screen-share" disabled>
          <i data-icon="screenshare"></i>
        </button>
        <p>Share Screen</p>
      </div>
      <% if (enableAnnotation) { %>
      <div id="annotate-button-container">
        <button id="annotate" disabled>
          <i data-icon="annotate"></i>
        </button>
        <p>Annotate</p>
      </div>
      <% } } %>
      <div>
        <button id="message-btn" disabled>
          <i data-icon="message"></i>
        </button>
        <p>Message
          <span id="unreadMsg">(<span id="unreadCount">0</span>)</span>
        </p>
      </div>
      <!-- <div id="copyLink-container">
        <button id="copyLink">
          <i data-icon="add"></i>
        </button>
        <p>Invite</p>
      </div> -->
    </div>
  </section>

  <% if (feedbackUrl) { %>
  <section class="feedbackButton">
    <span id="showFeedback">Feedback / Report a Bug</span>
  </section>
  <% } %>

  <section id="chat">
    <form class="dialog-chat" id="chatForm">
      <header>
        <div class="chat-title">
          <i data-icon="message_blue"></i>
          <span>Messaging</span>
        </div>
        <i id="closeChat" data-icon="close_blue"></i>
      </header>
      <div id="chatMsgs" class="tc-list">
        <ul>
        </ul>
      </div>
      <footer>
        <textarea id="msgText" placeholder="Type your message..." required></textarea>
        <button id="sendTxt" type="submit" data-icon="send" class="btn btn-blue btn-padding btn-padding-small"></button>
      </footer>
    </form>
  </section>

  <section id="screenShareErrors" class="screen-modal tc-modal">
    <div class="tc-dialog">
      <i data-icon="close_gray" class="close"></i>
      <section id="screenShareErrorMsg">
        <header class="errorTitle"></header>
        <hr>
        <p class="errorDescription"></p>
      </section>
      <section id="screenShareErrorInstall">
        <header>You need a Chrome extension to share your screen.</header>
        <hr>
        <p>Once you have installed it, refresh your browser and click 'share screen' again.</p>
        <footer>
          <button class="btn btn-blue btn-padding ctaarrow-white delete-archive">Install extension</button>
        </footer>
      </section>
      <section id="extInstallationSuccessful">
        <header>You need a Chrome extension to share your screen.</header>
        <hr>
        <p>Once you have installed it, refresh your browser and click 'share screen' again.</p>
        <footer>
          <button id="scrShrLater" class="btn btn-white btn-padding ctaarrow-blue">Later</button>
          <button id="scrShrReload" class="btn btn-blue btn-padding ctaarrow-white">Reload</button>
        </footer>
      </section>
    </div>
  </section>

  <section class="bubbles">
    <section for="viewRecordings" class="bubble" data-recordings="loading">
      <div class="bubble-content top-arrow">
        <p class="title recordings">Your recordings</p>
        <p class="title no-recordings">No recordings</p>
        <p class="title loading">Loading archived recordings...</p>
        <div class="tc-list videos">
          <ul></ul>
        </div>
      </div>
    </section>

    <section for="chooseLayout" class="bubble">
      <div class="bubble-content top-arrow">
        <ul>
          <li><a data-layout-type="float"></a></li>
          <li><a data-layout-type="f2f_horizontal"></a></li>
          <li><a data-layout-type="grid"></a></li>
          <li><a data-layout-type="f2f_vertical"></a></li>
          <li><a data-layout-type="hangout_horizontal"></a></li>
          <li><a data-layout-type="hangout_vertical"></a></li>
        </ul>
      </div>
    </section>
  </section>

    <section class="tc-modal feedback-report">
      <div class="tc-dialog">
        <header>
          <i data-icon="close_gray_full" class="close"></i>
          <div class="title-container">
            <div class="title" data-tab="feedback">
              <span>Share Your Feedback</span>
            </div>
          </div>
        </header>
        <section data-tab="feedback">
          <form>
            <div class="call-quality-feedback">
              <span class="feedback-title">How was the audio quality?</span>
              <div class="audio-feedback">
                <div class="feedback-dropdown">
                  <select class="audio-score">
                    <option value="5">Excellent! No issues.</option>
                    <option value="4">Good! Not perfect but not annoying.</option>
                    <option value="3" selected="selected">It was ok. I had a few issues.</option>
                    <option value="2">Poor. Annoying.</option>
                    <option value="1">I'm disappointed.</option>
                  </select>
                </div>
              </div>
              <div class="video-feedback">
                <span class="feedback-title">How was the video quality?</span>
                <div class="feedback-dropdown">
                  <select class="video-score">
                    <option value="5">Excellent! No issues.</option>
                    <option value="4">Good! Not perfect but not annoying.</option>
                    <option value="3" selected="selected">It was ok. I had a few issues.</option>
                    <option value="2">Poor. Annoying.</option>
                    <option value="1">I'm disappointed.</option>
                  </select>
                </div>
              </div>
            </div>
            <div class="feedback-suggestion">
              <span class="feedback-title suggestion-title">Any other info?</span>
              <input class="other-info" placeholder="What's on your mind?" />
            </div>
            <button class="btn btn-blue btn-padding send-feedback">Send Feedback</button>
          </form>
        </section>

      </div>
    </section>

    <section class="tc-modal archive-delete-modal">
      <form class="tc-dialog">
        <i data-icon="close_gray" class="close"></i>
        <header>Delete <span class="username"></span>'s Archive</header>
        <hr>
        <p>Are you sure you want to delete this archive?</p>
        <footer>
          <button class="btn btn-white btn-padding ctaarrow-blue">Cancel</button>
          <button class="btn btn-blue btn-padding ctaarrow-white delete-archive">Delete</button>
        </footer>
      </form>
    </section>

    <section class="tc-modal add-to-call-modal">
      <div class="tc-dialog">
        <header>
          <i data-icon="close_gray_full" class="close"></i>
          <div class="title" data-tab="feedback">
            <span>Invite Participants</span>
          </div>
        </header>
        <secton class="dialog-content">
          <div class="meeting-link">
            <input class="current-url" readonly id="current-url">
            <div class="copied-message">
              <span>copied to clipboard!</span>
            </div>
          </div>
          <%   if(hasSip) { %>
          <div class="google-sign-in-note-container">
            <div class="google-sign-in-note">
              <span class=title>Note:</span><br />
              <span>This function requires you to sign in with your <b>
                  <%=authDomain%></b> Google account</span>
            </div>
          </div>
          <form id="dialOutForm">
            <input id="dialOutNumber" class="phoneNumber" required>
            <button id="dialOutBtn" class="btn btn-blue btn-padding">Dial</button>
          </form>
          <% } %>
        </secton>
      </div>
    </section>

    <section id="switchAlerts" class="tc-modal switch-alert-modal">
      <form class="tc-dialog">
        <i data-icon="close_gray" class="close"></i>
        <header><span class="msg"></span></header>
        <hr>
        <p class="detail"></p>
        <select id="select-devices" class="devices"></select>
        <footer>
          <button class="btn btn-blue btn-padding ourBtn accept"></button>
          <!-- <button class="btn btn-blue btn-padding ourBtn ctaarrow-white accept"></button> -->
        </footer>
      </form>
    </section>

    <script type="text/javascript">
      var checkSessionStatus = setInterval(checkSessionStatus, 5000);
      // var checkMeetingStatus = setInterval(checkMeetingStatus, 1000);
      // var checkProfileStatus = setInterval(checkProfileStatusN, 60000);
      window.onload = function() {
        checkMeetingStatus();
        checkProfileStatus();
      };

      var meetingId = getLastSegment();
      var userId = getUrlParameter('userId');
      var userName = getUrlParameter('userName');
      var userImg = getUrlParameter('userImg');

      var price,gig,conference;

      // var baseUrl="http://127.0.0.1:8000/";

      var meetingType = getUrlParameter('meetingType');

      var uniqueName = getUrlParameter('uniqueName');

      var freeMinutes = getUrlParameter('fm');

      var owner = getUrlParameter('owner');

      var package = getUrlParameter('package');

      // var meetingUrl=baseUrl+"/m/"+btoa(meetingId);
      var meetingUrl=baseUrl+"/m/"+meetingId;


      function copyToClipboard(element) {
        console.log(element);
        var $temp = $("<input>");
        $("body").append($temp);
        $temp.val($(element).text()).select();
        document.execCommand("copy");
        $temp.remove();
      }

      $(document).ready(function(){
        $("body").on("click","#goBack",function(){
          window.location=baseUrl+"/admin/panel";
        });

        $("body").on("click","#enter",function(e){
          // e.preventDefault();
          console.log("update event status");
          if(meetingType=="event"){
            $.ajax({
              url: baseUrl+"/video/updateEventDetails",
              type: "POST",
              // dataType:"JSON",
              data:{meetingId},
              success: function(response){
                console.log("updated");
              }
            });
          }
        });

        console.log("Userid:" + userId);
        console.log(meetingType);
        $("#meetingUrlContainer").hide();
        $("body").on("click","#copyUrl",function(e){
          console.log("click");
          var elm=$(this);
          copyToClipboard("#meetingUrl");
          $(this).text('Copied!');
          setTimeout(function(){  elm.text('Copy'); }, 2000);

        });
        if(meetingType=="true" && owner=="true" && package==""){
          $("body #meetingUrl").append("asd");
          $("body .freeMinutes").show();
          $("body .freeMinutesCount").html(freeMinutes);
          console.log(freeMinutes);
        }
        if(!meetingType=="true" && meetingType==undefined){
          $("#addToCall-container").hide();
          $.ajax({
            url: baseUrl+"/video/getMeetingDetails",
            type: "POST",
            // dataType:"JSON",
            data:{meetingId},
            success: function(response){
              var d=JSON.parse(response);
              console.log(d);
              price=d.price;
              gig=d.gig;
              conference=d.conference;
              //hide spent time
              console.log("gig"+gig.author_id);
              if(gig.author_id==userId){
                $(".displaySpent").hide();
              }
              //hide spent time
            }
          });
        }
      });

      function calculatePrice(seconds){

        var pricePerMinute=parseFloat(price)/60;
        console.log("pp "+pricePerMinute);
        console.log("conference "+conference.tokbox);
        console.log("pp"+conference.our);
        var totalPerMinute=parseFloat(pricePerMinute)+parseFloat(conference.tokbox)+parseFloat(conference.our);
        var totalPerSec = totalPerMinute/60;
        var total=(seconds*totalPerSec).toFixed(2);
        return total;
      }

      function checkSessionStatus(){
        $.ajax({
            url: baseUrl+"/video/checkSessionStatus",
            type: "POST",
            // dataType:"JSON",
            data:{meetingId},
            success: function(response){
              var d=JSON.parse(response);
              if(d.status==1){
                clearInterval(checkSessionStatus);

                // $("body #endCall").trigger("click");

                // $("body .tc-dialog .accept").trigger("click");
                
                otHelper.disconnect();

                // Swal.fire({
                //   title: 'This session has ended.',
                //   text: 'You will be redirected to summary page.',
                //   type: 'error',
                //   confirmButtonText: 'Ok'
                // }).then((result) => {
                //     if (result.value) {
                //     var timerDetails=$('body .timerDetails').val();

                //       // alert("redirected");
                //       window.location = baseUrl + "/videoSummary/"+meetingId+"/"+userId+"/"+timerDetails;

                //     }
                //   });
              }
            },
            error: function(response) {

            }
          });
      }

      function checkMeetingStatus(){
        if(meetingType == 'meeting'){
          var timerDetails=$('body .timerDetails').val();

          if(getUrlParameter('owner') == 'true'){
            var data = {owner: 1, meetingId: meetingId, timer: timerDetails}
          }
          else{
            var user_unique_id = getUrlParameter('user_unique_id');
            var data = {owner: 0, meetingId: meetingId, user_unique_id: user_unique_id, timer: timerDetails}
          }

          console.log(data);

          $.ajax({
            url: baseUrl+"/video/checkSessionStatusMeeting",
            type: "POST",
            data:data,
            success: function(response){
              console.log(response);
              checkMeetingStatus();
            },
            error: function(response) {
              checkMeetingStatus();
            },
            complete: function(response){
            }
          });
        }
        else{
          // clearInterval(checkMeetingStatus);
        }
      }

      function checkProfileStatus(){
        if(meetingType != 'meeting'){
          var timerDetails=$('body .timerDetails').val();

          var data = {meetingId: meetingId, timer: timerDetails, userId: userId}

          console.log(data);

          $.ajax({
            url: baseUrl+"/video/checkSessionStatusProfile",
            type: "POST",
            data:data,
            success: function(response){
              console.log(response);
              checkProfileStatus();
            },
            error: function(response) {
              checkProfileStatus();
            },
            complete: function(response){
            }
          });
        }
        else{
          // clearInterval(checkProfileStatus);
        }
      }

    </script>

</body>

</html>